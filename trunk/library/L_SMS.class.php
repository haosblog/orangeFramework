<?php/** *  File: L_SMS.class.php *  Functionality: SMS 发送类 *  Author: Nic XIE *  Date: 2013-8-7 */class L_SMS {	private $url, $captchaName, $businessName, $userName, $captchaPWD, $businessPWD, $password;	private $ac, $captchaAC, $authkey, $captchaAuthKey, $cgid, $captchaCgid, $csid;	public $msg = '';	public $mobile = '';	private $developThird = '';	// 是否是经由中国短信网发送验证码	public $ChinaSMSCaptcha = 0;	function __construct($mobile = '', $msg = ''){		include CONFIG_PATH.'/SMS_config.php';		//第三方的短信开发商		$this->developThird =  $Config['smsConfig']['developThird'];		switch ($this->developThird ) {			case 'JIAHONG':				//用户名，由嘉弘公司提供				$this->captchaName = $Config['smsConfig'][$this->developThird]['captcha']['userName'];				 //MD5加密后的小写密码				$this->captchaPWD = $Config['smsConfig'][$this->developThird]['captcha']['password'];				$this->businessName = $Config['smsConfig'][$this->developThird]['business']['userName'];				$this->businessPWD = $Config['smsConfig'][$this->developThird]['business']['password'];			break;			case 'ChinaSMS':				$this->url = $Config['smsConfig'][$this->developThird]['url'];				$this->ac = $Config['smsConfig'][$this->developThird]['ac'];				$this->captchaAC = $Config['smsConfig'][$this->developThird]['captchaAC'];				$this->captchaAuthKey = $Config['smsConfig'][$this->developThird]['captchaAuthKey'];				$this->captchaCgid = $Config['smsConfig'][$this->developThird]['captchaCgid'];				$this->authkey = $Config['smsConfig'][$this->developThird]['authkey'];				$this->cgid = $Config['smsConfig'][$this->developThird]['cgid'];				$this->csid = $Config['smsConfig'][$this->developThird]['csid'];			break;		}		$this->mobile = $mobile;		$msg  = str_replace(' ', '', $msg);		$this->msg = $msg;	}	/**	 * [getWSDL 拿嘉弘的wsdl类]	 * @return [type] [description]	 */	final function getWSDL(){		try{			return new SoapClient("http://mas.jiahonginfo.com/ws/mallWebService?WSDL");		}catch(SoapFault $e){			echo __FUNCTION__.' errer:'.$e->getMessage();		}catch(Exception $e){			echo __FUNCTION__.' errer:'.$e->getMessage();		}	}	/**	 * [send 短信发送的公共入口  有参数(或者设置为1)： 就发验证码]]	 * @param  integer $codeType [0: 发送业务信息， 1:发送验证码]	 * @param  string $action    [发送类型，默认单条发送]	 * @return [type]            [description]	 */	final function send($codeType = 0, $action = 'sendOnce'){		switch ($this->developThird ) {			case 'JIAHONG':				return $this->sendByJH($codeType);			break;			case 'ChinaSMS':				return $this->sendByChinaSms($action);			break;		}	}	/**	 * [sendByChinaSms 中国短信网]	 * @param  string $action [发送类型，默认单条发送]	 * @return [type]         [description]	 */	public function sendByChinaSms($action = 'sendOnce'){		$data = array(			'action'  => $action,			'ac'	  => $this->ac,			'authkey' => $this->authkey,			'cgid'	  => $this->cgid,			'm'		  => $this->mobile,			'c'		  => $this->msg,			'csid'	  => $this->csid,			't'	      => ''		);		// 由中国短信网发验证码? 是则更改通道		if($this->ChinaSMSCaptcha){			$data['ac'] = $this->captchaAC;			$data['authkey'] = $this->captchaAuthKey;			$data['cgid'] = $this->captchaCgid;		}		$re = executeHTTPRequest($this->url, $data);				preg_match_all('/result="(.*?)"/', $re, $res);		if(trim($res[1][0]) == '1' ) {			return 0;		} else {			return $res[1][0];		}	}	/**	 * [sendByJH 短信发送 （嘉弘）有参数(或者设置为1)： 就发验证码]	 * @param  integer $codeType [0: 发送业务信息， 1:发送验证码]	 * @return 0代表成功, 其余的均失败	 */	final function sendByJH($codeType = 0){		$this->getNamePWD($codeType);		//必须加上前面否则移动的号码会被阻止(嘉弘)		$this->msg = $this->msg.'【房道网络】';		$data = array(			'userName' => $this->userName,			'password' =>strtolower(md5($this->password)),			'msgTitle' =>'短信标题：房道网',			'msgContent' =>$this->msg,			'phoneNums' =>$this->mobile,			//发送时间，格式为”yyyy-MM-dd hh:mm:ss”，			//例如传入2012-7-12 00:00:12。 如果传入当前时间则表示立即发送			'sendTime' =>date('Y-n-j H:i:s',CUR_TIMESTAMP)		);		$wsdl = $this->getWSDL();		try{			$result = $wsdl->createSmsSendTask($data);		}catch(SoapFault $e){			echo __FUNCTION__.' errer:'.$e->getMessage();		}catch(Exception $e){			echo __FUNCTION__.' errer:'.$e->getMessage();		}		if($result && $result->return){			if($result->return->code === '1'){				return 0;//发送成功			}else{						//发送失败，返回失败的错误信息				return $result->return;			}		}else{			return 1;//发送请求失败		}	}	/**	 * [getSmsRemaining 嘉弘短信可用条数查询]	 * @param  integer $codeType  [0: 查询业务条数， 1:查询验证码条数]	 * @return [type] [description]	 */	final function getSmsRemainingForJH($codeType = 0){		$this->getNamePWD($codeType);		$data = array(			'userName' => $this->userName,			'password' =>strtolower(md5($this->password))		);		//调用嘉弘的wsdl类		$wsdl = $this->getWSDL();		try{			$result = $wsdl->getAvilableSmsNums($data);		}catch(SoapFault $e){			echo __FUNCTION__.' errer:'.$e->getMessage();		}catch(Exception $e){			echo __FUNCTION__.' errer:'.$e->getMessage();		}		if($result && $result->return){			return $result->return;		}else{			return 1;//发送请求失败		}	}	/**	 * [getNamePWD （嘉弘）获取账户名和密码]	 * @param  integer $codeType [0: 查询业务条数， 1:查询验证码条数]	 * @return [type] [description]	 */	final function getNamePWD($codeType = 0){		//发送业务信息		if($codeType === 0){			$this->userName = $this->businessName;			$this->password = $this->businessPWD;		}else{			//1:发送验证码			$this->userName = $this->captchaName;			$this->password = $this->captchaPWD;		}	}	function __set($n, $v){		$this->$n = $v;	}		/**	 * sendBatch 批量发送的公共入口	 * @param array $phoneArr	需要发送的手机号码列表	 * @param array $msgArr	需要发送的信息列表，发送内容与手机号码必须一一对应	 * @param  string $msg      [所有手机发送同一消息和msgArr是对立的参数]	 * @param   codeType [0: 发送业务信息， 1:发送验证码]	 * @return [type]           [description]	 * TO DO 实际测试？	 */	public function sendBatch($phoneArr = '', $msgArr='', $msg='', $codeType = 0 ){		switch ($this->developThird ) {			case 'JIAHONG':				return $this->sendBatchByJH($phoneArr, $msgArr, $msg, $codeType);			break;			case 'ChinaSMS':				return $this->sendBatchByChinaSms($phoneArr, $msgArr);			break;		}	}	/**	 * [sendBatchByJH 批量发送 (嘉弘)]	 * @param array $phoneArr	需要发送的手机号码列表	 * @param array $msgArr	需要发送的信息列表，发送内容与手机号码必须一一对应	 * @param  string $msg      [所有手机发送同一消息和msgArr是对立的参数]	 * @param   codeType [0: 发送业务信息， 1:发送验证码]	 * @return [type]           [description]	 */	public function sendBatchByJH($phoneArr = '', $msgArr='', $msg='', $codeType = 0){		//记录循环发送的结果		$result = array();		//所有手机发送同一消息		if($msgArr == '' && $msg != ''){			$this->msg = $msg;			$phoneLength = sizeof($phoneArr);			//法一：用本身最多可以发99条的方法			//用半角逗号拆分手机号码，并循环发送			for ($i=0; $i < $phoneLength; $i++) { 				$j = $i + 1;				$temp = $phoneLength - 99*$j;				if($temp > 0){					// 调用一次只能接受99个手机号码					$tempMobile = array_slice($phoneArr, 99*$i, 99*$j);				}else{					$tempLength = $phoneLength - 99*$i;					$tempMobile = array_slice($phoneArr, 99*$i, $tempLength);				}				//多个手机号码用半角逗号”,”隔开。				$this->mobile = implode(',', $tempMobile);				$tempresult[0] = $this->send($codeType);				$result = array_merge_recursive($result,$tempresult);			}		}elseif($msgArr != '' && $msg == ''){			for ($i=0; $i < sizeof($phoneArr); $i++) {				$this->msg = $msgArr[$i];				$this->mobile = $phoneArr[$i];				$tempresult[0] = $this->send($codeType);				$result = array_merge_recursive($result,$tempresult);			}		}				return $result;	}	/**	 * sendBatchByChinaSms 批量发送（中国短信网）	 * @param array $phoneArr	需要发送的手机号码列表	 * @param array $msgArr 	需要发送的信息列表，发送内容与手机号码必须一一对应	 */	public function sendBatchByChinaSms($phoneArr, $msgArr){		$this->msg = implode('{|}', $msgArr);		$this->mobile = implode(',', $phoneArr);		return $this->send(0, 'sendBatch');	}}